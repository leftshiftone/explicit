apply plugin: "kotlin"
apply plugin: "org.jetbrains.dokka"
apply plugin: "com.jfrog.bintray"
apply plugin: "one.leftshift.asteria-publish"
apply plugin: "one.leftshift.asteria-dependency"


repositories {
    jcenter()
}

dependencies {
    implementation "org.slf4j:slf4j-api:1.7.28"
    implementation "org.antlr:antlr4-runtime:4.7.2"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

    testImplementation "org.junit.jupiter:junit-jupiter"
    testImplementation "org.assertj:assertj-core:3.11.1"
    testRuntime "org.slf4j:slf4j-simple:1.7.28"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

sourceSets.main.java.srcDirs += new File(buildDir, "generated-src/antlr")

test {
    useJUnitPlatform()
}

tasks.withType(Test) { testTask ->
    maxHeapSize = "1G"
    testTask.beforeTest { descriptor ->
        logger.lifecycle(descriptor.toString())
    }
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = "javadoc"
    outputDirectory = "${buildDir}/dokkaJavadoc"
}
task javadocJar(type: Jar) {
    from dokkaJavadoc
    classifier "javadoc"
}
asteriaPublish {
    enableBranchSnapshotRepositories = true
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = project.name
            from components.java
            artifact sourceJar
            artifact javadocJar
            pom.withXml {
                Node root = asNode()
                root.appendNode("name", "GAIA SDK")
                root.appendNode("description", "GAIA SDK is an open source software library in order to interact with the GAIA API.")
                root.appendNode("url", "https://github.com/leftshiftone/gaia-sdk")

                Node licenses = root.appendNode("licenses")
                Node license = licenses.appendNode("license")
                license.appendNode("name", "MIT")
                license.appendNode("url", "https://github.com/leftshiftone/gaia-sdk/blob/master/LICENSE")

                Node developers = root.appendNode("developers")
                Node developer = developers.appendNode("developer")
                developer.appendNode("id", "leftshiftone")
                developer.appendNode("name", "Leftshift One")
                developer.appendNode("email", "contact@leftshift.one")
                developer.appendNode("organization", "Leftshift One Software GmbH")
                developer.appendNode("organizationUrl", "https://www.leftshift.one")

                Node scm = root.appendNode("scm")
                scm.appendNode("connection", "scm:git:git://github.com/leftshiftone/gaia-sdk.git")
                scm.appendNode("developerConnection", "scm:git:ssh://github.com:leftshiftone/gaia-sdk.git")
                scm.appendNode("url", "https://github.com/leftshiftone/gaia-sdk")
            }
        }
    }
}

bintray {
    logger.info "Bintray deploy with user [${System.getenv('BINTRAY_USER')}] while working on ${project.name}"
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publish = true
    override = true
    pkg {
        repo = "gaia-sdk"
        name = "${project.group}.${project.name}"
        userOrg = "leftshiftone"
        licenses = ["MIT"]
        vcsUrl = "https://github.com/leftshiftone/gaia-sdk.git"
        publications = ["mavenJava"]
    }
}

if (System.getenv("CI")) {
    publish.finalizedBy bintrayUpload
}
if (System.getenv("CI") == null || System.getenv("CI") != "true") {
    rootProject.tasks.release.dependsOn tasks.generateLock
    rootProject.tasks.release.dependsOn tasks.saveLock
}
